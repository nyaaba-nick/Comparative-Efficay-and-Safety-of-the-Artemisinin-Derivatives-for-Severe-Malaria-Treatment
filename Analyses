 # Load packages
library(netmeta)
library(meta)
library(metafor)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(scales)
library(gridExtra)
library(dmetar
library(BiocManager)
library(hasseDiagram)
library(mosaic)

      # Set working directory
setwd("Z:Analyses")

      # import data
data<-read.csv("main.csv")
datax <- read.csv("sensitivity.csv")
datasub <- read.csv("subgroup.csv")


        ### Prepare Data####

##  Transform meta-analysis data from two arm-based formats into contrast-based format##

# Mortality
netdeath <- pairwise(treat = T,
                     event = mortality_e,
                     n = mortality_n,
                     data = data,
                     allstudies = T,
                     studlab = author_year,
                     sm = "RR")

# Coma Recovery Time
netcoma<- pairwise(treat=T,
                   n = crt_n,
                   mean=crt_mean,
                   sd=crt_sd,
                   data = data,
                   studlab = author_year,
                   sm = "MD")

# Parasite Clearance Time
netpara<- pairwise(treat=T,
                   n = pct_n,
                   mean=pct_mean,
                   sd=pct_sd,
                   data = data,
                   studlab = author_year,
                   sm = "MD")
                   
                   
# Fever Clearance Time
netfever<- pairwise(treat=T,
                   n = fct_n,
                   mean=fct_mean,
                   sd=fct_sd,
                   data = data,
                   studlab = author_year,
                   sm = "MD")

# Neurological Sequela Events
netneuro <- pairwise(treat = T,
                     event = neuro_e,
                     n = neuro_n,
                     data = data,
                     allstudies = T,
                     studlab = author_year,
                     sm = "RR")
# Hypoglycaemia Events
nethypo <- pairwise(treat = T,
                    event = hypoglycaemia_e,
                    n = hypoglycaemia_n,
                    data = data,
                    allstudies = T,
                    studlab = author_year,
                    sm = "RR")
                    
                    

          ### Create Factor variable for each pair of treatment ###
          
# Mortality

netdeath<-as.data.frame.matrix(netdeath)
netdeath<- 
  mutate(netdeath, Pairs= derivedFactor (
    "AMI vs QN" =(t1=="AMI"&t2=="QN"),
    "AME vs QN" =(t1=="AME"&t2=="QN"),
    "ATE vs QN" =(t1=="ATE"& t2=="QN"),
    "ASU vs QN" =(t1=="ASU"& t2=="QN"),
    "ASU vs AME" =(t1=="ASU"& t2=="AME"),
    "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
    "AMI vs AME" =(t1=="AMI"& t2=="AME"),
    .method="first",
    .default=0))


# Coma Recovery Time

netcoma<-as.data.frame.matrix(netcoma)
netcoma<- 
  mutate(netcoma, Pairs= derivedFactor (
    "AMI vs QN" =(t1=="AMI"&t2=="QN"),
    "AME vs QN" =(t1=="AME"&t2=="QN"),
    "ATE vs QN" =(t1=="ATE"& t2=="QN"),
    "ASU vs QN" =(t1=="ASU"& t2=="QN"),
    "ASU vs AME" =(t1=="ASU"& t2=="AME"),
    "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
    "AMI vs AME" =(t1=="AMI"& t2=="AME"),
    .method="first",
    .default=0))

# Parasite Clearance Time

netpara<-as.data.frame.matrix(netpara)
netpara<- 
  mutate(netpara, Pairs= derivedFactor (
    "AMI vs QN" =(t1=="AMI"&t2=="QN"),
    "AME vs QN" =(t1=="AME"&t2=="QN"),
    "ATE vs QN" =(t1=="ATE"& t2=="QN"),
    "ASU vs QN" =(t1=="ASU"& t2=="QN"),
    "ASU vs AME" =(t1=="ASU"& t2=="AME"),
    "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
    "AMI vs AME" =(t1=="AMI"& t2=="AME"),
    .method="first",
    .default=0))
       
        # Fever Clearance Time
netfever<-as.data.frame.matrix(netfever)
        netfever<- 
             mutate(netfever, Pairs= derivedFactor (
                        "AMI vs QN" =(t1=="AMI"&t2=="QN"),
                        "AME vs QN" =(t1=="AME"&t2=="QN"),
                        "ATE vs QN" =(t1=="ATE"& t2=="QN"),
                        "ASU vs QN" =(t1=="ASU"& t2=="QN"),
                        "ASU vs AME" =(t1=="ASU"& t2=="AME"),
                        "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
                        "AMI vs AME" =(t1=="AMI"& t2=="AME"),
                        .method="first",
                        .default=0))       
        

# Neurological Sequela events

netneuro<-as.data.frame.matrix(netneuro)
netneuro<- 
  mutate(netneuro, Pairs= derivedFactor (
    "AMI vs QN" =(t1=="AMI"&t2=="QN"),
    "AME vs QN" =(t1=="AME"&t2=="QN"),
    "ATE vs QN" =(t1=="ATE"& t2=="QN"),
    "ASU vs QN" =(t1=="ASU"& t2=="QN"),
    "ASU vs AME" =(t1=="ASU"& t2=="AME"),
    "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
    "AMI vs AME" =(t1=="AMI"& t2=="AME"),
    .method="first",
    .default=0))


# Hypoglycemia events

nethypo<-as.data.frame.matrix(nethypo)
nethypo<- 
  mutate(nethypo, Pairs= derivedFactor (
    "AMI vs QN" =(t1=="AMI"&t2=="QN"),
    "AME vs QN" =(t1=="AME"&t2=="QN"),
    "ATE vs QN" =(t1=="ATE"& t2=="QN"),
    "ASU vs QN" =(t1=="ASU"& t2=="QN"),
    "ASU vs AME" =(t1=="ASU"& t2=="AME"),
    "ASU vs AMI" =(t1=="ASU"& t2=="AMI"),
    "AMI vs AME" =(t1=="AMI"& t2=="AME"),
    .method="first",
    .default=0))





                            ###  Network Meta-Analyses ###

              ##   Mortality

      ##  Children

# Fit network consistency model 
nmac <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netdeath,
                subset = netdeath$age_group=="c",
                reference.group = "Quinine",
                seq = c("Artesunate", "Artemether","Artemisinin", "Arteether", "Quinine"),
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = T)
# display model output
 summary(nmac)
 
        #   Constructing a Netgraph
 #  subset data       
 child<- as.data.frame.matrix(netdeath)
 child<- subset(netdeath,age_group=="c")
 
 #  Calculating the nodesize
 nQN <- sum(subset(child, t2=="QN")$n2)
 
 nASU <- sum(subset(child, t1=="ASU")$n1)
 
 nAMI <- sum(subset(child, t1=="AMI")$n1)
 nAMI <- nAMI + sum(subset(child, t2=="AMI")$n2)
 
 nAME<- sum(subset(child, t2=="AME")$n2)
 nAME <- nAME + sum(subset(child, t1=="AME")$n1)
 
 nATE<- sum(subset(child, t1=="ATE")$n1)
 
 nodesize <- c(nATE,nAME,nAMI,nASU,nQN)/sum(c(nQN,nAME,nASU,nATE,nAMI))*100
 
 #  Netgraph Alternative in R
 
 tiff("Figure 2.tiff",
     width = 7000, height = 5500, res = 600, compression = "lzw")
 netgraph(nmac,
          plastic = FALSE,
          labels = c("Arteether; ATE","Artemether; AME","Artemisinin; AMI","Artesunate; ASU","Quinine; QN"),
          points = TRUE,
          cex.points = nodesizec,
          offset = 0.14,
          col.points= "blue",
          col = "black",
          number.of.studies = T,
          scale = 0.95,
          col.number.of.studies = "grey",
          thickness = "number.of.studies")
 
dev.off()
 

  #    Produce League table in CSV format
 lcm <- netleague(nmac, bracket = "(", digits=2)
 write.csv(lcm$random, "lcm.csv")
 
 
 #   Inconsistencies and heterogeneity
 
 #   Investigating heterogeneity and inconsistency:
 decomp.design(nmac)
 
 #   Agreement between direct and indirect evidence using node splitting:
 netsplit(nmac)
 #   Notice you can also see contribution of the direct evidence to the
 #   estimation of the RR for each comparison of the network.
 
 #   Use a forest plot to graphically contrast the results using the
 #   direct evidence vs indirect evidence:
 forest(netsplit(nmac))
 
 #Detailed output of direct evidence vs indirect evidence
 print(netsplit(nmac), digits = 2, ci = TRUE, test = T)

 
 
              ##  Adults

 #  Fit network consistency model 
nmaa <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netdeath,
                subset = netdeath$age_group=="a",
                reference.group = "Quinine",
                seq = c("Artesunate", "Artemether","Artemisinin", "Quinine"),
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = F)
# display model output
summary(nmaa)

# Constructing a Netgraph
# subset data
adult<- as.data.frame.matrix(netdeath)
adult<- subset(netdeath,age_group=="a")

# Calculating the nodesize

nQN <- sum(subset(adult, t2=="QN")$n2)

nASU <- sum(subset(adult, t1=="ASU")$n1)

nAMI <- sum(subset(adult, t1=="AMI")$n1)
nAMI <- nAMI + sum(subset(adult, t2=="AMI")$n2)

nAME<- sum(subset(adult, t2=="AME")$n2)
nAME <- nAME + sum(subset(adult, t1=="AME")$n1)

nodesize <- c(nAME,nAMI,nASU,nQN)/sum(c(nQN,nAME,nASU,nAMI))*70

# Alternaive in R netgraph

tiff("Fig2.tiff",
     width = 7000, height = 5500, res = 600, compression = "lzw")
netgraph(nmaa,
         plastic = FALSE,
         labels = c("Artemether; AME","Artemisinin; AMI","Artesunate; ASU","Quinine; QN"),
         points = TRUE,
         cex.points = nodesize,
         col.points= "blue",
         offset = 0.09,
         col = "black",
         number.of.studies = T,
         col.number.of.studies = "grey",
         thickness = "number.of.studies",
         scale = 0.95)


dev.off()


# Produce League table in CSV format
(lam<- netleague(nmaa, bracket = "(", digits=2))
write.csv(lam$random, "lam.csv")


      # Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nmaa)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nmaa), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
forest(netsplit(nmaa))




          ##   Coma Recovery Time
          
    ##  Children
    
# subset data    
child<- subset(netcoma,age_group=="c")

# Fit network consistency model 
nma2c<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               child,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Arteether", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)

# Produce League table in CSV format
lccrt <- netleague(nma2c, bracket = "(", digits=2)
write.csv(lccrt$random, "lccrt.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma2c)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma2c), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
        tiff("S5.tiff",
             width = 5000, height = 3500, res = 600, compression = "lzw")
        forest(nscrtc,
               prediction = F,
               overall = F,
               col.square= "blue",
               colgap.left="18mm",
               fontsize=14,
               show="all",
               leftcols = c("studlab","k"))
        dev.off ()
        


      ## Adults
      
# subset data
adult<- subset(netcoma,age_group=="a")

# Fit network consistency model 
nma2a<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               adult,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)
# Produce League table in CSV format
lacrt <- netleague(nma2a, bracket = "(", digits=2)
write.csv(lacrt$random, "lacrt.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma2a)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma2a), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
  nscrt<- netsplit(nma2a)
        tiff("S5A.tiff",
             width = 5000, height = 4000, res = 600, compression = "lzw")
        forest(nscrt,
               prediction = F,
               overall = T,
               col.square= "blue",
               colgap.left="18mm",
               fontsize=12,
               leftcols = c("studlab","k"))
        
        dev.off()
        
        # S5B. Netheat plot
        
        tiff("S6B.tiff",
             width = 6000, height = 4000, res = 600, compression = "lzw")
        netheat(nma2a,
                showall = T,
                random = T)
        dev.off()

          
          
          
          ##   Parasite clearance time
          
      ##  Children
      
 #  subset data 
child<- subset(netpara,age_group=="c")

# Fit network consistency model 
nma3c<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               child,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Arteether", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)

# Produce League table in CSV format
lacrt <- netleague(nma2a, bracket = "(", digits=2)
write.csv(lacrt$random, "lacrt.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma2a)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma2a), digits = 2, ci = TRUE, test = T)

# Supplemantary. Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
nsc<- netsplit(nma3c)
tiff("S6A.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")
forest(nsc,
       prediction = F,
       overall = F,
       colgap.left="18mm",
       fontsize=14,
       leftcols = c("studlab","k"))

dev.off()

# Supplementary. Netheat plot

tiff("S6B.tiff",
     width = 9000, height = 8500, res = 600, compression = "lzw")
netheat(nma3c,
        showall = T,
        random = T)
dev.off()

      ##  Adults
      
# subset data
adult<- subset(netpara,age_group=="a")

#Fit network consistency model 
nma3a<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               adult,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)

# Produce League table in CSV format
lapct <- netleague(nma3a, bracket = "(", digits=2)
write.csv(lapct$random, "lapct.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma3a)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma3a), digits = 2, ci = TRUE, test = T)

# Figure 12. Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
nsa<- netsplit(nma3a)

tiff("S7A.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")
     
forest(nsa,
       prediction = F,
       overall = F,
       fontsize=14,
       colgap.left="18mm",
       leftcols = c("studlab","k"))

dev.off()

# Supplementary. heatplot

tiff("S7B.tiff",
     width = 9000, height =8500 , res = 600, compression = "lzw")

netheat(nma3a,
        showall = T,
        random = T)

dev.off ()


 ##   Fever clearance time
          
      ##  Children
      
 #  subset data 
child<- subset(netfever,age_group=="c")

# Fit network consistency model 
nma4c<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               child,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Arteether", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)

# Produce League table in CSV format
lafct <- netleague(nma4c, bracket = "(", digits=2)
write.csv(lafct$random, "lafct.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma4c)


# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma4c), digits = 2, ci = TRUE, test = T)

# Supplemantary. Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
nsc<- netsplit(nma4c)
tiff("S8A.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")
forest(nsc,
       prediction = F,
       overall = F,
       colgap.left="18mm",
       fontsize=14,
       leftcols = c("studlab","k"))

dev.off()

# Supplementary. Netheat plot

tiff("S8B.tiff",
     width = 9000, height = 8500, res = 600, compression = "lzw")
netheat(nma4c,
        showall = T,
        random = T)
dev.off()

  ##  Adults
      
# subset data
adult<- subset(netfever,age_group=="a")

#Fit network consistency model 
nma4a<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               adult,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artesunate", "Artemether","Artemisinin", "Quinine"),
               sep.trt="vs",
               details.chkmultiarm = T)

# Produce League table in CSV format
lafct <- netleague(nma4a, bracket = "(", digits=2)
write.csv(lafct$random, "lapct.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma4a)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma4a), digits = 2, ci = TRUE, test = T)

 Figure 12. Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
nsa<- netsplit(nma4a)

tiff("S9A.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")
     
forest(nsa,
       prediction = F,
       overall = F,
       fontsize=14,
       colgap.left="18mm",
       leftcols = c("studlab","k"))

dev.off()

# Supplementary. heatplot

tiff("S9B.tiff",
     width = 9000, height =8500 , res = 600, compression = "lzw")

netheat(nma4a,
        showall = T,
        random = T)

dev.off ()





          ##   Neurological Sequela Events

      ##  Children
      
# Fit network consistency model 
nma5c <- netmeta(TE,
                 seTE,
                 treat1,
                 treat2,
                 studlab,
                 netneuro,
                 subset = netneuro$age_group=="c",
                 sm = "RR",
                 comb.fixed = FALSE,
                 prediction=T,
                 reference.group = "Quinine",
                 seq = c("Artesunate", "Artemether","Artemisinin", "Arteether", "Quinine"),
                 sep.trt="vs",
                 details.chkmultiarm = T)


# Produce League table in CSV format
lcneuro <- netleague(nma5c, bracket = "(", digits=2)
write.csv(lcneuro$random, "lcneuro.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma5c)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma5c), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
forest(netsplit(nma5c))

      ##  Adults
      
# Fit network consistency model 
nma5a<- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netneuro,
                subset = netneuro$age_group=="a",
                sm = "RR",
                comb.fixed = FALSE,
                prediction=T,
                reference.group = "Quinine",
                 seq = c("Artemether","Artesunate", "Artemisinin","Quinine"),
                sep.trt="vs",
                details.chkmultiarm = T)


# Produce League table in CSV format
laneuro <- netleague(nma5a, bracket = "(", digits=2)
write.csv(laneuro$random, "laneuro.csv")

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma5a)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma5a), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
forest(netsplit(nma5a))



          ##   Adverse Events

# Network meta-analyses of hypoglycaemia events

# Fit network consistency model 
nma6 <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                nethypo,
                sm = "RR",
                comb.fixed = FALSE,
                prediction=T,
                reference.group = "Quinine",
                seq = c("Artemisinin","Artemether","Artesunate", "Quinine"),
                sep.trt="vs",
                details.chkmultiarm = T)

# View output of model
summary(nma6)

# Figure 14. Network Results of hypoglycaemia events

tiff("S11A.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")

forest(nma6,
       xlim = c(0.04,4),
       smlab = "Hypoglycaemia Events",
       small.values = "good",
       reference.group = "Quinine",
      just.smlab = "left",
       leftcols =c("studlab","Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =16,
       plotwidth = "9cm",
       colgap.left="4mm",
       spacing= 3,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 20, ff.smlab = "bold",
       fs.study.labels= 16, ff.study.labels = "bold",
       fs.axis = 9
       
)
dev.off()

# Inconsistencies and heterogeneity

# Investigating heterogeneity and inconsistency:
decomp.design(nma6)

# Detailed output of direct evidence vs indirect evidence
print(netsplit(nma6), digits = 2, ci = TRUE, test = T)

# Use a forest plot to graphically contrast the results using the
# direct evidence vs indirect evidence:
forest(netsplit(nma6))


#	Analyses of EcG abnormalities 

#Transform data from two arm-based formats into contrast-based format
netecg <- pairwise(treat = T,
                   event = ecg_e,
                   n = ecg_n,
                   data = data,
                   allstudies = T,
                   studlab = author_year,
                   sm = "RR")


#	Conduct traditional pairwise meta-analyses with "metagen"
maecg<- metagen(TE,
               seTE,
               studlab,
               data = netecg,
               sm = "RR", 
               comb.fixed = FALSE,
               prediction = T,
               method.tau= "REML",
               method.tau.ci = "QP")

# S7. Direct Meta-analysis Construct forest plot

tiff("S11B.tiff",
     width = 6720, height = 3840, res = 600, compression = "lzw")
forest(maecg, 
       xlim = c(0.01, 70), 
       test.subgroup.random=F,
       test.effect.subgroup.random=F,
       label.test.effect.subgroup.random = "Test for effect:  " ,
       smlab = "ECG Abnormalities",
       small.values = "good",
       rightcols = c("effect","ci"),
       leftcols = c("studlab","event1","n1","event2","n2"),
       lab.e = "Artemether",
       lab.c = "Quinine",
       lab.e.attach.to.col = "event1",
       lab.c.attach.to.col = "event2",
       just.smlab = "left",
       leftlabs = c("Study","events","out of","events", "out of"),
       title= "ECG",
       col.square.lines = "blue",
       fontsize =14,
       plotwidth = "8cm",
       colgap.left="4mm",
       spacing= 3,
       overall = T,
       overall.hetstat = T,
       text.subgroup.nohet="NA",
       prediction = F,
       studlab = T,
       study.results = T,
       pooled.totals = T,
       print.tau2 = F,
       label.left = "favours artemether",
       label.right= "favours quinine",
       fs.smlab = 16, ff.smlab = "bold",
       fs.study.labels= 14, ff.study.labels = "bold",
       fs.axis = 9
)

dev.off()



          		##  5.7. Ranking and Forest plots 

##Children
		

##	Mortality

#	Rank
netrank(nmac, small.values = "good")

#	forest plot with P-Scores and ranking

forest(nmac,
       xlim = c(0.2,4),
       smlab = "A) Mortality",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "4.8cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
)

fe<- grid.grab()




 ##	Coma Recovery Time

#	Rank
netrank(nma2c, small.values = "good")

#	forest plot with P-Scores and ranking

forest(nma2c,
       xlim = c(-86,140),
       smlab = "B) Coma Recovery Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.3cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
       
)

ff<- grid.grab()




 ##	Parasite clearance time

#	Rank
netrank(nma3c, small.values = "good")

forest(nma3c,
       xlim = c(-45,13),
       smlab = "C) Parasite Clearance Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.5cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
      
)

fg<- grid.grab()



 ##	Fever clearance time

#	Rank
netrank(nma4c, small.values = "good")

#forest plot with P-Scores and ranking
forest(nma4c,
       xlim = c(-50,23),
       smlab = " D) Fever Clearance Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.2cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9,
       
)

fh<- grid.grab()




   ##	Neurological Sequela Events

# Rank
netrank(nma5c, small.values = "good")


#forest plot with P-Scores and ranking
forest(nma5c,
       xlim = c(0.05,80),
       smlab = "E) Neurological Sequela",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.2cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
       
)

fi<- grid.grab()

##Combine Graphs
tiff("Figure 3.tiff",
     width = 11100, height = 6000, res = 600, compression = "lzw")

grid.arrange(fe, ff, fg, fh,fi, ncol = 3, nrow = 2)

dev.off ()


					##Children
##	Mortality	

#	Rank
netrank(nmaa, small.values = "good")

#	forest plot with P-Scores and ranking

forest(nmaa,
       xlim = c(0.25,4),
       smlab = "A) Mortality",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
      
)

fa<- grid.grab()

     
  ##	Coma Recovery Time
		
#	Rank
netrank(nma2a, small.values = "good")

#	forest plot with P-Scores and ranking

forest(nma2a,
       xlim = c(-40,40),
       smlab = "B) Coma Recovery Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.5cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
)

fb<- grid.grab()



   ##	Parasite clearance time


#	Rank
netrank(nma3a, small.values = "good")

#	forest plot with P-Scores and ranking

forest(nma3a,
       xlim = c(-30,16),
       smlab = "C) Parasite Clearance Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "6cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
)

fc<- grid.grab()

 ##	Fever clearance time

#	Rank
netrank(nma4a, small.values = "good")


forest(nma4a,
       xlim = c(-45,62),
       smlab = " D) Fever Clearance Time",
       small.values = "good",
       reference.group = "Quinine",
       just.smlab = "left",
       leftcols =c("studlab", "Pscore"),
       sortvar = -Pscore,
       col.square= "blue",
       col.square.lines = "blue",
       fontsize =12,
       plotwidth = "5.5cm",
       colgap.left="2mm",
       spacing= 2,
       print.I2= F,
       print.pval.Q=F,
       hetlab= " ",
       label.left = "favours treatment",
       label.right= "favours quinine",
       fs.smlab = 13, ff.smlab = "bold",
       fs.study.labels= 12, ff.study.labels = "bold",
       fs.axis = 9
)

fd<- grid.grab()



tiff("Figure 4.tiff",
     width = 10000, height = 6000, res = 600, compression = "lzw")

grid.arrange(fa, fb, fc, fd, ncol = 2, nrow = 2)

dev.off ()




         ###  Sensitivity Analyses###



### Comparing Reported Means and Standard Deviations Only with Analyses That Included Approximations

## Coma Recovery Time 
#Fit a NMA model for Approximation

  nma2<-netmeta(TE,
                      seTE,
                      treat1,
                      treat2,
                      studlab,
                      netcoma,
                      sm = "MD",
                      comb.fixed = FALSE,
                      prediction=T,
                      reference.group = "Quinine",
                      seq = c("Artemisinin","Artemether","Artesunate","Arteether", "Quinine"),
                      sep.trt=" vs ",
                      details.chkmultiarm = T)
		      
		      
#Fit a NMA model for dataset that includes only reported means and sds

netcrt<- pairwise(treat=T,
                    n = crt_n,
                    mean=crt_mean,
                    sd=crt_sd,
                    data = datax,
                    studlab = author_year,
                    sm = "MD",
                    allstudies =T )

nma8<-netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netcrt,
                sm = "MD",
                comb.fixed = FALSE,
                prediction=T,
                reference.group = "Quinine",
                sep.trt="vs",
                details.chkmultiarm = T)


#  Forest Plots comparing reported means and standard deviations only with analyses that included approximations.

nb1 <- netbind(nma8,nma2,
               name = c(" Reported means and sds only", " Reported means and sds with approximations"),
               col.study = c("red", "black"),
               col.square = c("red", "black"))

# forest plot
#forest plot
forest(nb1, 
       col.by="black",
       addrow.subgroups = T,
       plotwidth = "11cm",
       colgap.left="4mm",
       colgap.right="4mm",
       leftlabs = "Treatment",
       smlab = "Coma Recovery Time",
       fontsize = 18, 
       spacing = 2, 
       squaresize = 0.7,
       label.left = "favours treatment",
       label.right = "favours quinine",
       fs.smlab=24)
       
# layout
nbc<- grid.grab()


## Parasite Clearance Time 

#Fit a NMA model for Approximations
nma3<-netmeta(TE,
              seTE,
              treat1,
              treat2,
              studlab,
              netpara,
              sm = "MD",
              comb.fixed = FALSE,
              prediction=T,
              reference.group = "Quinine",
              sep.trt="vs",
              details.chkmultiarm = T)
#Fit a NMA model for dataset that includes only reported means and sds

netpct<- pairwise(treat=T,
                    n = pct_n,
                    mean=pct_mean,
                    sd=pct_sd,
                    data = datax,
                    studlab = author_year,
                    sm = "MD",
                    allstudies =T )

nma9<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               netpct,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               sep.trt="vs",
               details.chkmultiarm = T)


  # Forest Plots comparing reported means and standard deviations only with analyses that included approximations.

nb2 <- netbind(nma9, nma3,
               name = c(" Reported means and sds only ", " Reported means and sds with approximations"),
               col.study = c("red", "black"),
               col.square = c("red", "black"))


# forest plot
forest(nb2, 
       col.by="black",
       addrow.subgroups = T,
       plotwidth = "11cm",
       colgap.left="4mm",
       colgap.right="4mm",
       leftlabs = "Treatment",
       smlab = "Parasite Clearance Time",
       fontsize = 18, 
       spacing = 2, 
       squaresize = 0.7,
       label.left = "favours treatment",
       label.right = "favours quinine",
       fs.smlab=24)

# layout
nbp<- grid.grab()




## Fever Clearance Time 

#Fit a NMA model for Approximations
nma4<-netmeta(TE,
              seTE,
              treat1,
              treat2,
              studlab,
              netfever,
              sm = "MD",
              comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               seq = c("Artemisinin","Artemether","Artesunate","Arteether", "Quinine"),
               sep.trt=" vs ",
               details.chkmultiarm = T)
        
	       	
                      
#Fit a NMA model for dataset that includes only reported means and sds

netfct<- pairwise(treat=T,
                    n = fct_n,
                    mean=fct_mean,
                    sd=fct_sd,
                    data = datax,
                    studlab = author_year,
                    sm = "MD",
                    allstudies =T )

nma10<-netmeta(TE,
               seTE,
               treat1,
               treat2,
               studlab,
               netfct,
               sm = "MD",
               comb.fixed = FALSE,
               prediction=T,
               reference.group = "Quinine",
               sep.trt="vs",
               details.chkmultiarm = T)


  # Forest Plots comparing reported means and standard deviations only with analyses that included approximations.

nb4 <- netbind(nma10, nma4,
               name = c(" Reported means and sds only ", " Reported means and sds with approximations"),
               col.study = c("red", "black"),
               col.square = c("red", "black"))


# forest plot
forest(nb4, 
       col.by="black",
       addrow.subgroups = T,
       plotwidth = "11cm",
       colgap.left="4mm",
       colgap.right="4mm",
       leftlabs = "Treatment",
       smlab = "Fever Clearance Time",
       fontsize = 18, 
       spacing = 2, 
       squaresize = 0.7,
       label.left = "favours treatment",
       label.right = "favours quinine",
       fs.smlab=24)

# layout
nb4<- grid.grab()



# Figure 28. Combine forest plots

tiff("S13",
     width = 10000, height = 10000, res = 600, compression = "lzw")
grid.arrange(nbc,nbp,nb4 ncol = 1, nrow = 3)

dev.off()





                 ###   Subgroup Analyses



 ##  Cerebral malaria only vs Non-specified severe malaria 

# Cerebral Malaria only
netcereb<- pairwise(treat = T,
                    event = cereb_e,
                    n = cereb_n,
                    data = datasub,
                    allstudies = T,
                    studlab = author_year,
                    sm = "RR")



nma11 <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netcereb,
                subset = netcereb$c_malaria.only =="Yes",
                reference.group = "Quinine",
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = T)

# Produce League table in CSV format
leagueyes<- netleague(nma10, bracket = "(", digits=2)
write.csv(leagueyes$random, "leagueayes.csv")

# display model output
summary(nma10)

# Investigating heterogeneity and inconsistency:
decomp.design(nmay)

# forest plot
forest(nmay, 
       reference.group = "QN",
       col.square = "blue")
       
       

      ## Non specified Malaria

nma12 <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netcereb,
                subset = netcereb$c_malaria.only =="No",
                reference.group = "Quinine",
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = T)

# Produce League table in CSV format
leagueno <- netleague(nma11, bracket = "(", digits=2)
write.csv(leagueno$random, "leagueno.csv")

# display model output
summary(nma11)


# Investigating heterogeneity and inconsistency:
decomp.design(nman)

# forest plot
forest(nman, 
       reference.group = "QN",
       col.square = "blue")




##  Asia vs Africa

#Africa

nmAf <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netdeath,
                subset = netdeath$study.continent =="Africa",
                reference.group = "Quinine",
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = T)
# display model output
summary(nmAf)


# Produce League table in CSV format
leagueAf<- netleague(nmAf, bracket = "(", digits=2)
write.csv(leagueAf$random, "leagueAf.csv")


# forest plot
forest(nmAf, 
       reference.group = "QN",
       col.square = "blue")


# Asia

nmAs <- netmeta(TE,
                seTE,
                treat1,
                treat2,
                studlab,
                netdeath,
                subset = netdeath$study.continent =="Asia",
                reference.group = "Quinine",
                sm = "RR", 
                comb.fixed = FALSE,
                prediction = T)

# display model output
summary(nmAs)

# Produce League table in CSV format
leagueAs <- netleague(nmAs, bracket = "(", digits=2)
write.csv(leagueAs$random, "leagueAs.csv")

#forest plot
forest(nmAs, 
       reference.group = "QN",
       col.square = "blue")



### Acute vs Persistent Neurological Sequela

netneurolo<- pairwise(treat = T,
                      event = neuro_e,
                      n = neuro_n,
                      data = datasub,
                      allstudies = T,
                      studlab = author_year,
                      sm = "RR")


nmacute <- netmeta(TE,
                   seTE,
                   treat1,
                   treat2,
                   studlab,
                   netneurolo,
                   subset = netneurolo$neuro =="a",
                   reference.group = "Quinine",
                   sm = "RR", 
                   comb.fixed = FALSE,
                   prediction = T)

# display model output
summary(nmacute)

# Produce League table in CSV format
(leagueacute<- netleague(nmacute, bracket = "(", digits=2))
write.csv(leagueacute$random, "leagueacute.csv")

# Investigating heterogeneity and inconsistency:
decomp.design(nmacute)

# forest plot
forest(nmacute, 
       reference.group = "QN",
       col.square = "blue")


nmaper <- netmeta(TE,
                  seTE,
                  treat1,
                  treat2,
                  studlab,
                  netneurolo,
                  subset = netneurolo$neuro =="p",
                  reference.group = "Quinine",
                  sm = "RR", 
                  comb.fixed = FALSE,
                  prediction = T)



# Produce League table in CSV format
leagueper<- netleague(nmaper, bracket = "(", digits=2)
write.csv(leagueper$random, "leagueaper.csv")


summary(nmaper)

# Investigating heterogeneity and inconsistency:
decomp.design(nmaper)

# forest plot
forest(nmaper, 
       reference.group = "QN",
       col.square = "blue")



                                            ### Assessing Publication Bias

#create order for funnel plot
ord<- c('AMI',"AME","ATE","ASU","QN")

# Funnel plot 

tiff("Figure 5.tiff",
     width = 10000, height = 10000, res = 600, compression = "lzw")
oldpar <- par(mfrow = c(2, 1))

funnel.netmeta(nma1, 
               order = ord,
               fontsize=12,
               linreg = F,
               spacing=1.2,
               legend=F,
               lwd=2, cex = 1, pch = 16, cex.studlab = 1.25,
               rank=F)

#Funnel plot with comparisons 
funnel.netmeta(nma1, 
               order = ord,
               linreg = T,
               spacing=1.2,
               fontsize=12,
               lty.ref.triangle=3,
               col = c("Red","Blue","Green","Yellow","Orange","Brown", "Pink"))


dev.off()
